---
name: Ansible Molecule
description: Run Ansible Molecule
author: Michael Schmitz

inputs:
  ansible_vault_password:
    description: Ansible Vault Password
    default: ${{ secrets.ANSIBLE_VAULT_PASSWORD }}
  args:
    description: 'Additional arguments passed to molecule test'
    default: ''
  aws_access_key_id:
    description: 'Specifies an AWS access key associated with an IAM account'
    default: ''
  aws_secret_access_key:
    description: 'Specifies the secret key associated with the access key. This is essentially the "password" for the access key'
    default: ''
  aws_default_region:
    description: 'identifies the AWS Region whose servers you want to send your requests to by default'
    default: 'eu-central-1'
  distro:
    description: 'Execute tests against distribution'
    default: 'debian-12'
  do_api_token:
    description: 'DigitalOcean PAT'
    default: ''
  hcloud_token:
    description: 'Hetzner API Token'
    default: ''
  hcloud_server_state:
    description: 'Server State after Molecule run'
    default: 'absent'
  molecule_debug:
    description: Whether to tell the GitHub client to log details of its requests
    default: ${{ (env.RUNNER_DEBUG == '1' && 'true') || 'false' }}
  molecule_scenario:
    description: Molecule scenario for testing
    default: 'docker'
  molecule_version:
    description: Molecule version to use, leave empty for newest
    default: ''
  ssh_key:
    description: 'SSH Key to use'
    default: ''
  test_type:
    description: 'Choose between: unit|integration'
    default: 'unit'
  token:
    description: 'Gitea Runner token'
    default: 'unit'
  vultr_api_key:
    description: 'Vultr PAT'
    default: ''

runs:
  using: "composite"
  steps:
    - name: Set CI_HOSTNAME / CI_PROJECT_NAME_MOLECULE
      run: |
        echo "CI_HOSTNAME=$(echo $MOLECULE_DISTRO | tr -dc '[:alnum:]\n\r' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "CI_PROJECT_NAME_MOLECULE=$(echo ${GITHUB_REPOSITORY#*/} | tr '_' '-')" >> $GITHUB_ENV
      shell: bash
      env:
        MOLECULE_DISTRO: "${{ inputs.distro }}"

    - name: Prepare Ansible Vault
      run: echo "${{ inputs.ansible_vault_password }}" > "$GITHUB_WORKSPACE/.vault"
      shell: bash

    - name: Check out the molecule repository
      uses: https://github.com/actions/checkout@v4
      with:
        github-server-url: https://git.msqu.de
        repository: cicd/molecule
        token: ${{ inputs.token }}
        path: 'git_molecule'
        ref: 'main'
        fetch-depth: 0
        sparse-checkout: |
          scenarios/${{ inputs.molecule_scenario }}

    - name: Check out the infra repository
      uses: https://github.com/actions/checkout@v4
      with:
        github-server-url: https://git.msqu.de
        repository: infrastructure/infra
        token: ${{ inputs.token }}
        path: 'git_infra'
        ref: 'main'
        fetch-depth: 0
        sparse-checkout: |
          requirements
          group_vars

    - name: Prepare Molecule Scenario
      run: |
        mkdir -p ${GITHUB_WORKSPACE}/molecule/default
        rsync -avzh --ignore-existing --ignore-errors git_molecule/scenarios/${{ inputs.molecule_scenario }}/ ${GITHUB_WORKSPACE}/molecule/default/
      shell: bash

    - name: Sync vars
      run: |
        if [[ "${{ inputs.test_type }}" == "unit" ]] && [[ -f "${GITHUB_WORKSPACE}/tests/vars.yml" ]]; then
          mkdir -p ${GITHUB_WORKSPACE}/molecule/default/group_vars/all/ && rsync -aP ${GITHUB_WORKSPACE}/tests/vars.yml ${GITHUB_WORKSPACE}/molecule/default/group_vars/all/test_vars.yml
        elif [[ "${{ inputs.test_type }}" == "integration" ]]; then
          rsync -aP git_infra/group_vars ${GITHUB_WORKSPACE}/molecule/default/
        fi
      shell: bash

    - name: Run Molecule tests
      run: molecule test ${{ inputs.args }}
      shell: bash
      env:
        ANSIBLE_FORCE_COLOR: '1'
        ANSIBLE_VERBOSITY: '2'
        CI_JOB_ID: "${{ github.run_id }}"
        CI_PROJECT_DIR: "$GITHUB_WORKSPACE"
        GITEA_TOKEN: "${{ inputs.token }}"
        HCLOUD_SERVER_STATE: "${{ inputs.hcloud_server_state }}"
        MOLECULE_DEBUG: "${{ inputs.molecule_debug }}"
        MOLECULE_DISTRO: "${{ inputs.distro }}"
        MOLECULE_SCENARIO_NAME: "${{ inputs.molecule_scenario }}"
        PY_COLORS: '1'
        TEST_TYPE: "${{ inputs.test_type }}"
        # Cloud Provider Credentials
        AWS_DEFAULT_REGION: "${{ inputs.AWS_DEFAULT_REGION }}"
        AWS_ACCESS_KEY_ID: "${{ inputs.AWS_ACCESS_KEY_ID }}"
        AWS_SECRET_ACCESS_KEY: "${{ inputs.AWS_SECRET_ACCESS_KEY }}"
        DO_API_TOKEN: "${{ inputs.DO_API_TOKEN }}"
        HCLOUD_TOKEN: "${{ inputs.HCLOUD_TOKEN }}"
        VULTR_API_KEY: "${{ inputs.VULTR_API_KEY }}"
