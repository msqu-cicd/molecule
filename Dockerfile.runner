FROM debian:trixie-slim

LABEL maintainer="Michael"
LABEL description="Custom Debian Trixie runner with pre-installed Ansible/Molecule tools"

# Avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive \
    RUNNER_TOOL_CACHE=/toolcache \
    ImageOS=debian13

# Set shell with error handling
SHELL ["/bin/bash", "-e", "-u", "-o", "pipefail", "-c"]

# Install system dependencies in one layer
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
        ca-certificates \
        curl \
        git \
        git-lfs \
        openssh-client \
        rsync \
        wget \
        sudo \
        gnupg2 \
        build-essential \
        libffi-dev \
        libssl-dev \
        xz-utils \
        # Python 3.13 and dependencies
        python3.13 \
        python3.13-dev \
        python3.13-venv \
        python3-pip && \
    # Setup Python 3.13 as default
    update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.13 1 && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3.13 1 && \
    # Cleanup
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Install Node.js (required for GitHub Actions)
ARG NODE_VERSION=20
ENV NODE_VERSION=${NODE_VERSION}
RUN ARCH=$(uname -m | sed 's/x86_64/x64/;s/aarch64/arm64/') && \
    curl -fsSL "https://nodejs.org/dist/v${NODE_VERSION}.18.1/node-v${NODE_VERSION}.18.1-linux-${ARCH}.tar.xz" | \
    tar -xJ -C /usr/local --strip-components=1 && \
    node --version && npm --version

# Install Python packages
RUN pip3 install --no-cache-dir --break-system-packages \
        ansible-core \
        ansible-lint \
        molecule \
        yamllint \
        netaddr \
        jmespath \
        dnspython \
        python-dateutil \
        Jinja2 \
        requests \
        passlib

# Create tool cache directory structure (matching GitHub Actions runner)
RUN mkdir -p ${RUNNER_TOOL_CACHE} && \
    chmod -R 777 ${RUNNER_TOOL_CACHE}

# Setup SSH known hosts for common Git hosts
RUN mkdir -p /etc/ssh && \
    ssh-keyscan -t rsa,ecdsa,ed25519 github.com >> /etc/ssh/ssh_known_hosts && \
    ssh-keyscan -t rsa,ecdsa,ed25519 gitlab.com >> /etc/ssh/ssh_known_hosts

# Configure Git LFS
RUN git lfs install --system

# Configure Git for Ansible galaxy (disable detached HEAD warnings)
RUN git config --global advice.detachedHead false

# Pre-install Ansible collections
COPY collections.yml /tmp/collections.yml
RUN ansible-galaxy install -r /tmp/collections.yml && \
    rm /tmp/collections.yml

# Set working directory
WORKDIR /workspace

# Reset to default shell
SHELL ["/bin/sh", "-c"]
