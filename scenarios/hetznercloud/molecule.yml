---
dependency:
  name: galaxy
driver:
  name: default
platforms:
  - name: molecule-${CI_PROJECT_NAME_MOLECULE}
    server_type: ${INSTANCE_SIZE:-cax11}
    image: ${MOLECULE_DISTRO}
    location: ${INSTANCE_REGION:-fsn1}
    groups:
      - master
    labels:
      environment: molecule
      project: ${CI_PROJECT_NAME:-molecule}
      managed-by: molecule
    network:
      - name: ${CI_PROJECT_NAME_MOLECULE:-molecule}
        ip_range: 172.16.0.0/24
        subnet:
          - ip: 172.16.0.${SUBNET_IP:-199}/24
            type: cloud
            network_zone: eu-central
provisioner:
  name: ansible
  config_options:
    defaults:
      bin_ansible_callbacks: yes
      callbacks_enabled: ansible.posix.timer, ansible.posix.profile_tasks
      display_failed_stderr: true
      host_key_checking: false
      remote_tmp: '/tmp/.ansible-${USER}/tmp'
      callback_result_format: yaml
      vault_password_file: ${CI_PROJECT_DIR}/.vault
      roles_path: ${CI_PROJECT_DIR}/..
    ssh_connection:
      ssh_args: '-o ControlMaster=auto -o ControlPersist=1800s -o ConnectionAttempts=100 -o UserKnownHostsFile=/dev/null -o PreferredAuthentications=publickey -o ServerAliveInterval=45 -o ServerAliveCountMax=10'
      pipelining: true
    diff:
      always: true
    callback_profile_tasks:
      task_output_limit: all
  playbooks:
    prepare: ${MOLECULE_PLAYBOOK_PREPARE:-prepare.yml}
    cleanup: ${MOLECULE_PLAYBOOK_CLEANUP:-cleanup.yml}
    converge: ${MOLECULE_PLAYBOOK_CONVERGE:-converge.yml}
    destroy: ${MOLECULE_PLAYBOOK_DESTROY:-destroy.yml}
  log: true
verifier:
  name: ansible
