---
image:
  name: gcr.io/kaniko-project/executor:debug
  entrypoint: [""]

variables:
  CI_REGISTRY: registry.msqu.de
  CONTAINER_IMAGE: $CI_REGISTRY/$CI_PROJECT_NAME

# global rules
.rules-default:
  - if: '$CI_PIPELINE_SOURCE == "web"'
    when: always
  - changes:
      - ".ansible-lint"
      - ".gitlab-ci.yml"
      - ".yamllint"
      - "Makefile"
    when: never
  - if: '$CI_SERVER_URL == "https://gitlab.msqu.de"'

.build-template: &build-template
  stage: build
  rules: !reference [.rules-default]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"},\"$DOCKER_REGISTRY\":{\"auth\":\"$(echo -n ${DOCKER_USERNAME}:${DOCKER_PASSWORD} | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

    # default tag based on commit
    - IMAGE_DESTS="--destination $CONTAINER_IMAGE:${IMAGE_TAG}"
    - IMAGE_DESTS="$IMAGE_DESTS --destination $DOCKER_USERNAME/${CI_PROJECT_NAME}:${IMAGE_TAG}"

    # add tag for reference if available
    - |
      if [[ ! -z $CI_COMMIT_REF_NAME ]]; then
        # replace / with - in reference names
        REF_TAG_NORMALIZED=$(echo $CI_COMMIT_REF_NAME | sed s:/:-:g)
        IMAGE_DESTS="$IMAGE_DESTS --destination $DOCKER_USERNAME/${CI_PROJECT_NAME}:${IMAGE_TAG}-$REF_TAG_NORMALIZED"
        IMAGE_DESTS="$IMAGE_DESTS --destination $CONTAINER_IMAGE:${IMAGE_TAG}-$REF_TAG_NORMALIZED"
      fi

    - >
      /kaniko/executor \
        --context "${CI_PROJECT_DIR}" \
        --log-timestamp=true \
        --push-retry=2 \
        --single-snapshot \
        --use-new-run \
        --build-arg VERSION=${VERSION:-"latest"} \
        --destination "${CONTAINER_IMAGE}:${IMAGE_TAG}" \
        --dockerfile ${DOCKERFILE:-./Dockerfile} \
        $IMAGE_DESTS

build-ansible:
  <<: *build-template
  variables:
    IMAGE_TAG: "ansible"
    DOCKERFILE: ./Ansible
    VERSION: "python:3-alpine"

build-ansible-dind:
  <<: *build-template
  variables:
    IMAGE_TAG: "ansible-dind"
    DOCKERFILE: ./Ansible
    VERSION: "docker:dind"

build-archlinux:
  <<: *build-template
  variables:
    IMAGE_TAG: "archlinux"
    DOCKERFILE: ./Archlinux

build-debian-10:
  <<: *build-template
  variables:
    IMAGE_TAG: "debian-10"
    DOCKERFILE: ./Debian
    VERSION: "10"

build-debian-11:
  <<: *build-template
  variables:
    IMAGE_TAG: "debian-11"
    DOCKERFILE: ./Debian
    VERSION: "bullseye"

build-debian-12:
  <<: *build-template
  variables:
    IMAGE_TAG: "debian-12"
    DOCKERFILE: ./Debian
    VERSION: "bookworm"

build-lint:
  <<: *build-template
  variables:
    IMAGE_TAG: "lint"
    DOCKERFILE: ./Lint

build-ubuntu-2004:
  <<: *build-template
  variables:
    IMAGE_TAG: "ubuntu-20.04"
    DOCKERFILE: ./Ubuntu
    VERSION: "20.04"

build-ubuntu-2204:
  <<: *build-template
  variables:
    IMAGE_TAG: "ubuntu-22.04"
    DOCKERFILE: ./Ubuntu
    VERSION: "22.04"
