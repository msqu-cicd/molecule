name: Build Runner Image

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile.runner'
      - '.gitea/workflows/build-runner-image.yml'
  workflow_dispatch:
  schedule:
    # Rebuild weekly to get security updates
    - cron: '0 2 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: msqu-devops/molecule-runner

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: https://github.com/actions/checkout@v5

      - name: Checkout Ansible collections
        uses: https://github.com/actions/checkout@v5
        with:
          github-server-url: https://git.msqu.de
          repository: ansible/ansible
          token: '${{ secrets.CI_RUNNER_PAT }}'
          path: git_ansible
          ref: main
          fetch-depth: 1

      - name: Copy collections file to build context
        run: |
          cp git_ansible/collections_git.yml ./collections.yml

      - name: Set up Docker Buildx
        uses: https://github.com/docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: https://github.com/docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: https://github.com/docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push Docker image
        uses: https://github.com/docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile.runner
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          platforms: linux/amd64

      - name: Image digest
        run: echo ${{ steps.meta.outputs.digest }}
